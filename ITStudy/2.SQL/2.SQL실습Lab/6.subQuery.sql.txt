-- 6.subQuery.sql
-- select(쿼리)문 내에 포함된 또 다른 select문 작성 방법
-- main쿼리와 sub쿼리(main쿼리에 포함된 쿼리)


--1. SMITH라는 직원 부서명 검색
/*  emp의 ename/dept의 dname
	emp.deptno = dept.no */
	
	
 select dname
 from dept
 where deptno=(select deptno
			   from emp
			   where ename='SMITH');
			   
 --where절 안에 서브쿼리가 들어감. 서브쿼리도 쿼리의 형식을 갖춤. 쉽게 하려면 서브쿼리 문장부터 만들어라.
	


--2. SMITH와 동일한 직급(job)을 가진 사원들의 이름, job 검색(SMITH 포함)

	
	select ename, job
	from emp
	where job =
				(select job
				from emp
				where ename='SMITH')
				and ename != 'SMITH';
				
	--SMITH는 제외시켜야지. 다만, 메인쿼리에서




--3. SMITH와 급여가 동일하거나 더 많은(>=) 사원명과 급여 검색

	select ename, sal
	from emp
	where sal >=
				(select sal
				 from emp
				 where ename='SMITH')
				 and ename !='SMITH';



--4. DALLAS에 근무하는 사원의 이름, 부서 번호 검색

	select ename, deptno
	from emp
	where deptno = (select deptno from dept where loc='DALLAS');
	
	--동등조인도 가능
	
	select ename, emp.deptno
	from emp, dept
	where emp.deptno = dept.deptno and loc = 'DALLAS';


--5. 평균 급여보다 더 많이 받는(>) 사원만 검색

	select ename
	from emp
	where sal > (select avg(sal) from emp);


-- 다중행 서브 쿼리
-- 6.급여가 3000이상 사원이 소속된 부서에 속한  사원이름, 급여 검색

	--급여 3000이상인 사원들 검색
	select sal from emp where sal >= 3000;
	-- 이 두 사원이 소속된 부서 번호 확인
	select deptno from emp where sal >=3000;
	--10번과 20번 부서에 속한 다른 사원들 이름, 급여 검색
	select ename, sal from emp
	where deptno in(10,20);
	
	--이 나눠진 3 문장을 조합해 서브쿼리로...
	
	select ename, sal from emp
	where deptno in (select deptno from emp
					where sal >= 3000);
					
	-- in에다 서브쿼리를 넣으면 된다. 쿼리 안에 쿼리가 들어가는 형식.


--7. in 연산자를 이용하여 부서별로 가장 급여를 많이 받는 사원의 정보(사번, 사원명, 급여, 부서번호) 검색

	select empno, ename, sal, deptno
	from emp
	where sal in (select max(sal) from emp group by deptno);
	
	--어렵다. group by도 select문에 넣어야. 

	select empno, ename, sal, deptno
	from emp
	where (sal,deptno) in (select max(sal), deptno from emp group by deptno);

--8. 직급(job)이 MANAGER인 사람이 속한 부서의 부서 번호와 부서명과 지역검색

	select deptno, dname, loc
	from dept
	where deptno in (select deptno from emp where job='MANAGER');
	
	-- 다중행은 = 대신 in을 쓴다. 서브쿼리부터 천천히.
	-- job이 MANAGER인 사람이 속한 부서를 먼저 찾기.

