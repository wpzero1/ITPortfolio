-- 7.DDL.sql
-- table 생성(create) 중요!! 과 삭제(drop), 수정(alter)
-- DDL(Data Definition Language)

/* DB특징
1. 저장시킨 데이터는 삭제전까지 사용이 가능
	- 전원 여부와 무관하게 전원연결이 되어있다면 다 사용
2. 실습 구조
	- sqlplus 창을 두개로 실행(DB 사용 app~ 하나 이상이 동시 접속이 가능함을 의미)
	- 하나의 sqlplus에서 생성한 table은 다른 app~에서 사용 가능한 table
*/
drop table test;
create table test( --test라는 테이블 생성
	name varchar(10) --name이라는 컬럼
);
drop table test;

--1. table삭제 
drop table test;

--삭제하고 나서는 object가 없다고 나옴. 객체로 인정


--2. table 생성  
-- name(varchar2), age(number3) 칼럼 보유한 people table 생성

drop table people;

create table people(
	name varchar2(10), --컬럼명, 타입(변수)
	age number(3)
);

--메모리 저장 측면에서 varchar2가 좋음. 10을 주면 10까지만 최대로 메모리를 가짐.




-- 3. 서브 쿼리 활용해서 emp01 table 생성(이미 존재하는 table기반으로 생성) // 원본 테이블 유지를 위해서
-- table 구조 및 데이터까지 복제
-- 단, 원본 table에 절대 영향을 미치지 않음
-- emp table의 모든 데이터로 emp01 생성

	drop table emp01; --기존 데이터 있을 우려때문에 삭제
	create table emp01 as select * from emp;
	desc emp01;
	select * from emp01;
	--as 를 쓴다

-- 4. 서브쿼리 활용해서 특정 칼럼(empno)만으로 emp02 table 생성

drop table emp02;
create table emp02 as select empno from emp;


desc emp02;
select * from emp02;


--5. deptno=10 조건문 반영해서 emp03 table 생성

drop table emp03;
create table emp03 as select deptno from emp
where deptno = 10;

select * from emp03;


-- 6. 데이터 insert없이 table 구조로만 새로운 emp04 table생성시 
-- 사용되는 조건식 : where=거짓
-- 1=0 이라는 표기는 거짓을 표현하기 위한 예시임

drop table emp04;
create table emp04 as select * from emp where 1=0;
desc emp04;
select * from emp04;



-- *** table 수정 : alter ***
-- emp01 table로 실습해 보기

--7. emp01 table에 job이라는 특정 칼럼 추가(job varchar2(10))
-- 이미 데이터를 보유한 table에 새로운 job칼럼 추가 가능 (add로 추가)
desc emp01;
drop table emp01;
create table emp01 as select empno, ename from emp;
desc emp01;

alter table emp01 add(job varchar2(10));
desc emp01;



--8. 이미 존재하는 칼럼 사이즈 변경 시도해 보기
-- 데이터 미 존재 칼럼의 사이즈 수정(modify)
alter table emp01 modify(job varchar2(20));

desc emp01;


--9. 이미 데이터가 존재할 경우 칼럼 사이즈가 큰 사이즈의 컬럼으로 변경 가능 
-- 혹 사이즈 감소시 주의사항 : 이미 존재하는 데이터보다 적은 사이즈로 변경 절대 불가 
drop table emp01;
create table emp01 as select empno, ename, job from emp;
select * from emp01;
desc emp01;

alter table emp01 modify(job varchar(30));
desc emp01;
select * from emp01;
alter table emp01 modify(job varchar(10)); --이건 가능
alter table emp01 modify(job varchar(5)); --이건 존재하는 데이터보다 작은 사이즈로 바꾸려해서 안됨
-- 무결성 보장 : 데이터 손실이 발생 가능하다면 db 자체가 수정 거부


--10. job 칼럼 삭제  alter 씀.
-- 데이터 존재시에도 자동 삭제 
alter table emp01 drop column job;

desc emp01;
select * from emp01;


--11. emp01을 test01로 table 이름 변경
	-- 가급적 권장하지 않는 작업
rename emp01 to test01;

select * from test01;


--12. table의 순수 데이터만 완벽하게 삭제하는 명령어 
--commit 불필요 (복구 불가능)
	-- 삭제 후 복구 가능한 명령어 : DML의 delete 명령어
truncate table emp01;
truncate table test01; --테이블 이름 바꿨으니 이게 맞다









