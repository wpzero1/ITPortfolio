//한라인 주석
/* 블록단위의 주석
 *  1. 데이터를 자바 언어로 표현하는 방법 연습
 *  2. 데이터 = 자바 관점(변수로 표현해야한다)
 *  3. 로직
 *   1. 친구들 정보를 프로그램화
 *   	- 이름(문자열,string)
 *   	- 거주지(문자열,string)
 *   	- 나이(정수, int)  문자는 한 음절, 문자열은 한 줄..)
 *   2. 수정, 저장, 삭제
 *  4. 고려 사항
 *   1. 친구들이 몇 명?
 *  5. 필수 암기 사항
 *   1. 데이터 생성/삭제/수정/검색
 *  		create/delete/update/select
 *   2. CRUD(씨알유디)
 *  		 C[create], R[read(select)], U[update], D[delete]
 *  6. 문법 암기사항
 *   1. class 선언구
 *   2. (데이터 표현을 위해) 변수 문법 : 변수 선언(생성), 변수 호출(사용)
 *   	타입 변수명 [= 데이터];  ([]는 생략 가능한 괄호식) (=은 대입 연산자. 오른쪽에서 왼쪽으로 넘어온다.)
 *   	(세미콜론은 문법 끝을 의미. 까먹지 말 것!)
 *   3. 객체 생성
 *    - 클래스는 객체가 아님
 *      메모리에서 실제 사용 가능한 구조는 데이터들을 보유한 메모리 점유
 *    	이 메모리는 수정, 삭제 등이 가능
 *    - 문법
 *    	 FriendVO p1 = new FriendVO()
 *    new : 객체 생성, 그 뒤에는 클래스 이름 바로 나옴
 *    p1은 person 1
 *    string, int처럼 위에도 FriendVO라는 데이터임. 즉 우리가 데이터 타입을 만들 수 있다.
 *    자바에서의 타입은 누구나 만들 수 있다. 단지, 문자열 / 정수 구분은 있어야하지만 새로 데이터 타입 해준건
 *    구분 없다.
 *  7. 생성자
 *   1. 객체(instance)를 생성할 수 있게 해주는 유일한 구성요소(문법)
 *   2. 모든 클래스에 무조건 존재
 *   	- 개발자가 미코딩시 컴파일 시점에 자동생성
 *   	- 단, 필요에 의해서 코드로 개발해 놓은 생성자 존재시, 컴파일러(기계어로 변경해주는 역할)는 절대 자동추가 하지 않음. 
 *   
 *  8. 학습 내용
 *   1. 클래스 구현 방법
 *   2. 변수 선언 방법
 *   3. 객체 생성 문법 학습
 *   4. 여러개의 클래스로 구분해서 (다른 클래스) 연습
 *   5. (두개의 클래스 분류해서) import
 *   6. public을 변수에 반영
 *   7. 실제 메모리에 생성해서 사용 가능한 객체는 instance 라고 함
 *   8. 생성자
 * 		- 생성자의 () 용도
 * 		- ()안에 선언된 변수 : 매개변수, argument, parameter...(다 같은 것을 뜻하는 용어임)
 * 
 */
package step01.domain;

public class FriendVO {
	public String name = "황인범";
	public String cellPhone = "000-0000-0000";
	public int age = 27;
	//여기서 컴파일러가 자동으로 public FriendVO() {} 가 만들어준다.
	
	//멤버 변수값 새로 대입하는(초기화) 생성자
	//3개의 데이터를 받아서 멤버 변수에 대입해야함 -> 받을 수 있는 환경과 문법이 필요함 (멤버변수를 일일히 바꾸는걸 좀더 편하게)
	//실시간으로 생성자가 데이터를 바꿔줬으면 할 땐?(가변적인 데이터) 함수를 생각.
	//단 기본로직인 FriendVO() {} 이것도 필요함
	
	
	
	
	// class라는 이름은 아무데서나 쓸 수가 없다.
	// 시작점이 없을 때는, 실행할 수가 없다.
	// java program의 start point 필수 메소드 (제공받고 스펙에 맞게 개발). 대소문자 주의
	
	
		}
