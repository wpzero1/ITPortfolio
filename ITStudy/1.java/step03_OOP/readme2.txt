학습 내용

1. review
	 주요 키워드
	  타입 - 메소드의 반환, 변수 타입, 메소드 생성자의 parameter
		기본 : 소문자
		   정수형, 실수형, 문자형, 논리형
		  byte/short/int/long 0
		  float/double		  0.0
		  char ''			  '\u0000'
		  boolean			  false
		참조
		  클래스, 객체
		 null
		 
	  클래스 구조
	  변수, 생성자, 메소드, static{}
	  	변수
	  	1] 멤버
	  	 static 변수
	  	  - 객체 생성 없이 클래스명.변수
	  	 instance 변수
	  	  - 객체 생성 후 사용 필수
	  	  * class{} 내부에 선언되는 변수
	  	  
	  	2] 로컬
	  	 * 생성자, 메소드의 parameter 또는 생성자의 {} body에 선언되는 변수
	  	  - 생성자 또는 메소드 호출해서 실행부터 종료까지만 존재
	  	  - 자동 초기화 불가. 따라서 반드시 값을 줌으로써 초기화를 시켜줘야한다.
	  	  (예시)
	  	  class Test{
	  	  	int a;
	  	  	void b(){
	  	  	int c;
	  	  }
	  	  p.s.v.main(){
	  	  	Test t = new Test(); //int a=0으로 자동 초기화
	  	  	t.b();//c라는 변수는 자동 초기화 불가
	  	
	  	생성자
	  	 1] 클래스명과 100% 동일
	  	 2] 반환 타입 영역 자체가 미 존재
	  	 3] 하나의 클래스에 여러개 구현(다중정의 = overloading, overload)
	  	  - rule : 반드시 parameter는 달라야함
	  	 4] 개발자가 생성자 미코딩시 자동으로 기본 생성자 만들어짐
	  	 
	  	 메소드
	  	  1] 기능 구현을 위한 표현
	  	  2] 문법
	  	  	[access modifier][기타 modifier]반환타입 메소드명 ([..]){[..]}
	  	  	
	  	 static{}
	  	  1] 모든 user가 공유하는 자원을 단 한번만 실행 보장
	  	  	- 시스템 자원 절약 측면에서 유용한 코드
	  	  2] byte code가 메모리에 로딩될 때 단 한번 실행
	  	  	
	  	access modifier
	  	  1] 4가지 뿐
	  	  2] public - 접근 제한 없음
	  	  3] protected - 동일한 package(동일한 폴더) 내에선 access(호출) 가능
	  	  		단, 다른 package에서는 상속 관계의 클래스에서만 access 가능
	  	  4] default(생략된 형태)
	  	  	- 동일한 package(동일한 폴더) 내에서만 access(호출) 가능
	  	  5] private
	  	  	- 동일한 클래스내에서만 가능 
	  	  	
		기타 modifier
			1] access modifier를 제외한 변수타입 앞단에, class 키워드 앞단에, 메소드 반환타입 앞단에 올 수 있는 것들
			2] static
			  (1) 변수
			   - 생성되는 모든 객체가 공유
			   - 객체 생성하지 않아도 사용 가능
			  (2) 메소드
			  	- 객체 생성없이 메소드 호출 가능
			  	- java.lang.Math
			  	  - 모든 메소드는 static
			  	  - 생성자를 private으로 숨겨놓음
		형변환
			1] 기본타입
			  - 사이즈가 기준
			  큰타입 변수 = 작은 타입; upcasting(자동형변환)
			  작은타입 변수 = (작은타입)큰타입변수; downcasting(명시적인 형변환 (괄호로 명시해야함))
			2] 참조타입
			  - 상속관계, 레벨이 기준
			  부모타입 변수 = 자식객체; 자동형변환
			  자식타입 변수 = (자식타입)부모참조변수; 명시적인 형변환
			
		상속
			1] 클래스간의 상속
			2] 부모를 확장해서 자식 클래스 개발
			3] 모든 클래스의 최상위 root : java.lang.Object
			4] extends
			5] 레벨은 부모가 높다
			6] 상속되는 구성 요소
				- 변수와 메소드만 상속
				- 메소드는 내용 수정이 가능(재정의, ovverriding, override)
					: rule - 메소드 선언구 100프로 동일
		다형성
			1] 문법
			  상위타입 변수 = 자식객체
			2] 제약조건
			  상위타입 변수는 절대 상속시키지 않은 자식만의 멤버는 호출 불가
			  상위타입 변수가 자식 멤버호출을 위해선 반드시 객체타입 형변환 문법으로 새로운 자식타입 변수 선언해서 사용
			  
		반복문, 제어문, 조건문